<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.15.0@5c774aca4746caf3d239d9c8cadb9f882ca29352">
  <file src="src/AbstractFactory/ConfigAbstractFactory.php">
    <InvalidStringClass>
      <code>new $requestedName(...$arguments)</code>
    </InvalidStringClass>
    <MixedArgument>
      <code>$serviceDependencies</code>
      <code>$serviceDependencies</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$config[self::class]</code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$config</code>
      <code>$dependencies</code>
    </MixedAssignment>
  </file>
  <file src="src/AbstractFactory/ReflectionBasedAbstractFactory.php">
    <ArgumentTypeCoercion>
      <code>$requestedName</code>
    </ArgumentTypeCoercion>
    <MixedMethodCall>
      <code>new $requestedName(...$parameters)</code>
    </MixedMethodCall>
  </file>
  <file src="src/AbstractPluginManager.php">
    <PossiblyUnusedMethod>
      <code>mapLazyService</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Exception/CyclicAliasException.php">
    <InvalidArgument>
      <code>self::deDuplicateDetectedCycles($detectedCycles)</code>
    </InvalidArgument>
    <PossiblyFalseOperand>
      <code>$cycle</code>
    </PossiblyFalseOperand>
  </file>
  <file src="src/Factory/InvokableFactory.php">
    <InvalidStringClass>
      <code>new $requestedName($options)</code>
      <code>new $requestedName()</code>
    </InvalidStringClass>
  </file>
  <file src="src/Module.php">
    <UnusedClass>
      <code>Module</code>
    </UnusedClass>
  </file>
  <file src="src/PluginManagerInterface.php">
    <PossiblyUnusedMethod>
      <code>validate</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Proxy/LazyServiceFactory.php">
    <MissingClosureParamType>
      <code>$wrappedInstance</code>
    </MissingClosureParamType>
    <MixedAssignment>
      <code>$wrappedInstance</code>
    </MixedAssignment>
  </file>
  <file src="src/ServiceManager.php">
    <InvalidArrayOffset>
      <code><![CDATA[$this->services[$service]]]></code>
    </InvalidArrayOffset>
    <InvalidCast>
      <code>$service</code>
    </InvalidCast>
    <MissingClosureReturnType>
      <code>function () use ($name, $options) {</code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code>$abstractFactory</code>
      <code><![CDATA[$config['aliases']]]></code>
      <code><![CDATA[$config['delegators']]]></code>
      <code><![CDATA[$config['delegators']]]></code>
      <code><![CDATA[$config['factories']]]></code>
      <code><![CDATA[$config['initializers']]]></code>
      <code><![CDATA[$config['invokables']]]></code>
      <code><![CDATA[$config['invokables']]]></code>
      <code><![CDATA[$config['lazy_services']]]></code>
      <code><![CDATA[$config['lazy_services']['class_map']]]></code>
      <code><![CDATA[$config['shared']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$service</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayTypeCoercion>
      <code><![CDATA[$this->services[$service]]]></code>
    </MixedArrayTypeCoercion>
    <MixedAssignment>
      <code>$abstractFactories</code>
      <code>$abstractFactory</code>
      <code><![CDATA[$config['aliases']]]></code>
      <code><![CDATA[$this->aliases]]></code>
      <code><![CDATA[$this->factories]]></code>
      <code><![CDATA[$this->shared]]></code>
      <code><![CDATA[$this->sharedByDefault]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$config['aliases']]]></code>
      <code><![CDATA[$config['aliases'] ?? []]]></code>
      <code><![CDATA[$config['factories']]]></code>
      <code><![CDATA[$config['shared']]]></code>
    </MixedOperand>
    <UnusedForeachValue>
      <code>$service</code>
      <code>$target</code>
    </UnusedForeachValue>
    <UnusedReturnValue>
      <code>DelegatorsConfiguration</code>
    </UnusedReturnValue>
  </file>
  <file src="src/Test/CommonPluginManagerTrait.php">
    <ArgumentTypeCoercion>
      <code>$expected</code>
      <code><![CDATA[$this->getServiceNotFoundException()]]></code>
      <code><![CDATA[$this->getServiceNotFoundException()]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Tool/ConfigDumper.php">
    <MixedArgument>
      <code><![CDATA[$config['service_manager']]]></code>
      <code><![CDATA[$config['service_manager']['factories']]]></code>
      <code>$key</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$className</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAssignment>
      <code><![CDATA[$config['service_manager']['factories']]]></code>
      <code><![CDATA[$config['service_manager']['factories'][$className]]]></code>
      <code>$config[ConfigAbstractFactory::class][$className]</code>
      <code>$config[ConfigAbstractFactory::class][$className]</code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$key</code>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyNullArgument>
      <code>$key</code>
    </PossiblyNullArgument>
  </file>
  <file src="test/AbstractPluginManagerTest.php">
    <MixedAssignment>
      <code>$instance</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedPropertyAssignment>
      <code>$instance</code>
    </MixedPropertyAssignment>
  </file>
  <file src="test/Command/ConfigDumperCommandTest.php">
    <PossiblyUnusedMethod>
      <code>ignoreUnresolvedArguments</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/CommonServiceLocatorBehaviorsTrait.php">
    <MissingClosureParamType>
      <code>$callback</code>
      <code>$className</code>
      <code>$container</code>
      <code>$container</code>
      <code>$instance</code>
      <code>$instance</code>
      <code>$name</code>
      <code>$requestedName</code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code>static function ($container, $name, $callback) {</code>
    </MissingClosureReturnType>
    <MixedAssignment>
      <code>$first</code>
      <code>$instance</code>
      <code>$nonSharedObj1</code>
      <code>$nonSharedObj2</code>
      <code>$obj</code>
      <code>$second</code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code>$callback()</code>
    </MixedFunctionCall>
    <MixedPropertyAssignment>
      <code>$instance</code>
    </MixedPropertyAssignment>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$object['get'][0]]]></code>
    </PossiblyUndefinedArrayOffset>
    <UnusedClosureParam>
      <code>$container</code>
      <code>$options</code>
      <code>$requestedName</code>
    </UnusedClosureParam>
  </file>
  <file src="test/LazyServiceIntegrationTest.php">
    <InvalidReturnStatement>
      <code>array_filter(spl_autoload_functions(), $filter)</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>AutoloaderInterface[]</code>
    </InvalidReturnType>
    <MissingClosureParamType>
      <code>$autoload</code>
    </MissingClosureParamType>
    <RedundantCondition>
      <code>assertIsArray</code>
      <code>assertIsArray</code>
    </RedundantCondition>
  </file>
  <file src="test/Proxy/LazyServiceFactoryTest.php">
    <InvalidArgument>
      <code><![CDATA[[$callback, 'callback']]]></code>
    </InvalidArgument>
    <MissingClosureParamType>
      <code>$className</code>
      <code>$initializer</code>
    </MissingClosureParamType>
    <MixedFunctionCall>
      <code>$initializer($wrappedInstance, $proxy)</code>
    </MixedFunctionCall>
    <UnusedVariable>
      <code>$wrappedInstance</code>
    </UnusedVariable>
  </file>
  <file src="test/ServiceManagerTest.php">
    <MixedAssignment>
      <code>$inc</code>
      <code>$inc</code>
      <code>$instance1</code>
      <code>$instance1</code>
      <code>$instance2</code>
      <code>$instance2</code>
      <code>$service</code>
      <code>$serviceFromAlias</code>
      <code>$serviceFromServiceNameAfterUsingAlias</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code>$inc</code>
    </MixedOperand>
    <PossiblyUnusedMethod>
      <code>sampleFactory</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/StaticAnalysis/ServiceManagerConfiguration.php">
    <UnusedClass>
      <code>ServiceManagerConfiguration</code>
    </UnusedClass>
  </file>
  <file src="test/Tool/ConfigDumperTest.php">
    <MixedAssignment>
      <code>$test</code>
    </MixedAssignment>
    <UnresolvableInclude>
      <code>include $file</code>
    </UnresolvableInclude>
  </file>
</files>
