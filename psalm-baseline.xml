<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.2.0@fb685a16df3050d4c18d8a4100fe83abe6458cba">
  <file src="src/AbstractFactory/ConfigAbstractFactory.php">
    <InvalidStringClass occurrences="1">
      <code>new $requestedName(...$arguments)</code>
    </InvalidStringClass>
    <MixedArgument occurrences="2">
      <code>$serviceDependencies</code>
      <code>$serviceDependencies</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config[self::class]</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$dependencies</code>
    </MixedAssignment>
  </file>
  <file src="src/AbstractFactory/ReflectionBasedAbstractFactory.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$requestedName</code>
    </ArgumentTypeCoercion>
    <MixedMethodCall occurrences="1">
      <code>new $requestedName(...$parameters)</code>
    </MixedMethodCall>
  </file>
  <file src="src/AbstractPluginManager.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$config</code>
      <code>$config</code>
    </ArgumentTypeCoercion>
    <ImplementedParamTypeMismatch occurrences="1">
      <code>$service</code>
    </ImplementedParamTypeMismatch>
    <MissingReturnType occurrences="1">
      <code>setService</code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$service</code>
    </MixedArgumentTypeCoercion>
    <ParamNameMismatch occurrences="1">
      <code>$name</code>
    </ParamNameMismatch>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_object($configInstanceOrParentLocator)</code>
    </RedundantConditionGivenDocblockType>
    <UnusedPsalmSuppress occurrences="1">
      <code>MixedAssignment</code>
    </UnusedPsalmSuppress>
  </file>
  <file src="src/Config.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>ArrayUtils::merge($a, $b)</code>
    </LessSpecificReturnStatement>
    <MixedArrayTypeCoercion occurrences="1">
      <code>$this-&gt;allowedKeys[$key]</code>
    </MixedArrayTypeCoercion>
    <MoreSpecificReturnType occurrences="1">
      <code>ServiceManagerConfigurationType</code>
    </MoreSpecificReturnType>
    <UnusedPsalmSuppress occurrences="2">
      <code>MixedReturnTypeCoercion</code>
      <code>MixedReturnTypeCoercion</code>
    </UnusedPsalmSuppress>
  </file>
  <file src="src/Exception/CyclicAliasException.php">
    <InvalidArgument occurrences="1">
      <code>self::deDuplicateDetectedCycles($detectedCycles)</code>
    </InvalidArgument>
    <MixedArgumentTypeCoercion occurrences="2">
      <code>$alias</code>
      <code>$detectedCycles</code>
    </MixedArgumentTypeCoercion>
    <PossiblyFalseOperand occurrences="1">
      <code>$cycle</code>
    </PossiblyFalseOperand>
  </file>
  <file src="src/Factory/InvokableFactory.php">
    <InvalidStringClass occurrences="2">
      <code>new $requestedName($options)</code>
      <code>new $requestedName()</code>
    </InvalidStringClass>
  </file>
  <file src="src/Proxy/LazyServiceFactory.php">
    <MissingClosureParamType occurrences="1">
      <code>$wrappedInstance</code>
    </MissingClosureParamType>
    <MixedAssignment occurrences="1">
      <code>$wrappedInstance</code>
    </MixedAssignment>
  </file>
  <file src="src/ServiceManager.php">
    <InvalidArgument occurrences="3">
      <code>['delegators' =&gt; [$name =&gt; [$factory]]]</code>
      <code>['initializers' =&gt; [$initializer]]</code>
      <code>['lazy_services' =&gt; ['class_map' =&gt; [$name =&gt; $class ?: $name]]]</code>
    </InvalidArgument>
    <InvalidArrayOffset occurrences="6">
      <code>$this-&gt;services[$service]</code>
      <code>$this-&gt;services[$service]</code>
      <code>$this-&gt;services[$service]</code>
      <code>$this-&gt;services[$service]</code>
      <code>$this-&gt;services[$service]</code>
      <code>$this-&gt;services[$service]</code>
    </InvalidArrayOffset>
    <InvalidCast occurrences="6">
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
    </InvalidCast>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;factories</code>
    </InvalidPropertyAssignmentValue>
    <MissingClosureReturnType occurrences="1">
      <code>function () use ($name, $options) {</code>
    </MissingClosureReturnType>
    <MissingReturnType occurrences="9">
      <code>addAbstractFactory</code>
      <code>addDelegator</code>
      <code>addInitializer</code>
      <code>mapLazyService</code>
      <code>setAlias</code>
      <code>setAllowOverride</code>
      <code>setInvokableClass</code>
      <code>setService</code>
      <code>setShared</code>
    </MissingReturnType>
    <MixedArgument occurrences="11">
      <code>$abstractFactory</code>
      <code>$config['aliases']</code>
      <code>$config['delegators']</code>
      <code>$config['delegators']</code>
      <code>$config['factories']</code>
      <code>$config['initializers']</code>
      <code>$config['invokables']</code>
      <code>$config['invokables']</code>
      <code>$config['lazy_services']</code>
      <code>$config['lazy_services']['class_map']</code>
      <code>$config['shared']</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="8">
      <code>$alias</code>
      <code>$alias</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayTypeCoercion occurrences="6">
      <code>$this-&gt;services[$service]</code>
      <code>$this-&gt;services[$service]</code>
      <code>$this-&gt;services[$service]</code>
      <code>$this-&gt;services[$service]</code>
      <code>$this-&gt;services[$service]</code>
      <code>$this-&gt;services[$service]</code>
    </MixedArrayTypeCoercion>
    <MixedAssignment occurrences="9">
      <code>$abstractFactories</code>
      <code>$abstractFactory</code>
      <code>$abstractFactory</code>
      <code>$config['aliases']</code>
      <code>$key</code>
      <code>$this-&gt;aliases</code>
      <code>$this-&gt;factories</code>
      <code>$this-&gt;shared</code>
      <code>$this-&gt;sharedByDefault</code>
    </MixedAssignment>
    <MixedOperand occurrences="4">
      <code>$config['aliases']</code>
      <code>$config['aliases'] ?? []</code>
      <code>$config['factories']</code>
      <code>$config['shared']</code>
    </MixedOperand>
    <ParamNameMismatch occurrences="2">
      <code>$name</code>
      <code>$name</code>
    </ParamNameMismatch>
    <RedundantCastGivenDocblockType occurrences="2">
      <code>(bool) $flag</code>
      <code>(bool) $flag</code>
    </RedundantCastGivenDocblockType>
    <TypeDoesNotContainType occurrences="2">
      <code>$sharedAlias</code>
      <code>$sharedAlias</code>
    </TypeDoesNotContainType>
    <UnusedForeachValue occurrences="3">
      <code>$delegatorFactory</code>
      <code>$service</code>
      <code>$target</code>
    </UnusedForeachValue>
    <UnusedVariable occurrences="1">
      <code>$key</code>
    </UnusedVariable>
  </file>
  <file src="src/Test/CommonPluginManagerTrait.php">
    <ArgumentTypeCoercion occurrences="3">
      <code>$expected</code>
      <code>$this-&gt;getServiceNotFoundException()</code>
      <code>$this-&gt;getServiceNotFoundException()</code>
    </ArgumentTypeCoercion>
    <MissingReturnType occurrences="5">
      <code>testInstanceOfMatches</code>
      <code>testLoadingInvalidElementRaisesException</code>
      <code>testPluginAliasesResolve</code>
      <code>testRegisteringInvalidElementRaisesException</code>
      <code>testShareByDefaultAndSharedByDefault</code>
    </MissingReturnType>
    <MixedAssignment occurrences="4">
      <code>$alias</code>
      <code>$expected</code>
      <code>$shareByDefault</code>
      <code>$sharedByDefault</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
  </file>
  <file src="src/Tool/ConfigDumper.php">
    <MixedArgument occurrences="3">
      <code>$config['service_manager']</code>
      <code>$config['service_manager']['factories']</code>
      <code>$key</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$className</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAssignment occurrences="4">
      <code>$config['service_manager']['factories']</code>
      <code>$config['service_manager']['factories'][$className]</code>
      <code>$config[ConfigAbstractFactory::class][$className]</code>
      <code>$config[ConfigAbstractFactory::class][$className]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="3">
      <code>$dependency</code>
      <code>$key</code>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyNullArgument occurrences="1">
      <code>$key</code>
    </PossiblyNullArgument>
    <UnusedForeachValue occurrences="1">
      <code>$dependency</code>
    </UnusedForeachValue>
  </file>
  <file src="test/AbstractFactory/ConfigAbstractFactoryTest.php">
    <InvalidArgument occurrences="1">
      <code>'Holistic'</code>
    </InvalidArgument>
  </file>
  <file src="test/AbstractPluginManagerTest.php">
    <DeprecatedMethod occurrences="1">
      <code>setServiceLocator</code>
    </DeprecatedMethod>
    <InvalidArgument occurrences="5"/>
    <MissingClosureParamType occurrences="4">
      <code>$callback</code>
      <code>$container</code>
      <code>$name</code>
      <code>$plugin</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="1">
      <code>static function ($container, $name, $callback) {</code>
    </MissingClosureReturnType>
    <MixedArgument occurrences="1">
      <code>$arg</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$instance</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="1">
      <code>$callback()</code>
    </MixedFunctionCall>
    <MixedInferredReturnType occurrences="2">
      <code>array</code>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedPropertyAssignment occurrences="1">
      <code>$instance</code>
    </MixedPropertyAssignment>
    <UnusedClosureParam occurrences="6">
      <code>$container</code>
      <code>$errstr</code>
      <code>$errstr</code>
      <code>$errstr</code>
      <code>$errstr</code>
      <code>$name</code>
    </UnusedClosureParam>
  </file>
  <file src="test/CommonServiceLocatorBehaviorsTrait.php">
    <EmptyArrayAccess occurrences="1">
      <code>$object['get'][0]</code>
    </EmptyArrayAccess>
    <InvalidArgument occurrences="2"/>
    <InvalidArrayOffset occurrences="1">
      <code>$config['shared']</code>
    </InvalidArrayOffset>
    <MissingClosureParamType occurrences="8">
      <code>$callback</code>
      <code>$className</code>
      <code>$container</code>
      <code>$container</code>
      <code>$instance</code>
      <code>$instance</code>
      <code>$name</code>
      <code>$requestedName</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="1">
      <code>static function ($container, $name, $callback) {</code>
    </MissingClosureReturnType>
    <MissingConstructor occurrences="2">
      <code>$creationContext</code>
      <code>$creationContext</code>
    </MissingConstructor>
    <MixedArrayAssignment occurrences="1">
      <code>$object[$shared ? $method : 'build'][]</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="2">
      <code>$names[$name]</code>
      <code>$object[$shared ? $method : 'build']</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="14">
      <code>$first</code>
      <code>$idx1</code>
      <code>$idx2</code>
      <code>$instance</code>
      <code>$method</code>
      <code>$name</code>
      <code>$names[$name]</code>
      <code>$nonSharedObj1</code>
      <code>$nonSharedObj2</code>
      <code>$obj</code>
      <code>$object[$shared ? $method : 'build'][]</code>
      <code>$second</code>
      <code>$shared</code>
      <code>$shared</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="1">
      <code>$callback()</code>
    </MixedFunctionCall>
    <MixedInferredReturnType occurrences="3">
      <code>array</code>
      <code>array</code>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedPropertyAssignment occurrences="1">
      <code>$instance</code>
    </MixedPropertyAssignment>
    <PossiblyUndefinedVariable occurrences="1">
      <code>$object</code>
    </PossiblyUndefinedVariable>
    <TooManyArguments occurrences="1">
      <code>has</code>
    </TooManyArguments>
    <UnusedClosureParam occurrences="9">
      <code>$container</code>
      <code>$container</code>
      <code>$container</code>
      <code>$container</code>
      <code>$container</code>
      <code>$name</code>
      <code>$options</code>
      <code>$requestedName</code>
      <code>$serviceLocator</code>
    </UnusedClosureParam>
  </file>
  <file src="test/ConfigTest.php">
    <MixedAssignment occurrences="2">
      <code>$configInstance</code>
      <code>$configuration</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>toArray</code>
    </MixedMethodCall>
  </file>
  <file src="test/LazyServiceIntegrationTest.php">
    <InvalidReturnStatement occurrences="1">
      <code>array_filter(spl_autoload_functions(), $filter)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>AutoloaderInterface[]</code>
    </InvalidReturnType>
    <MissingClosureParamType occurrences="1">
      <code>$autoload</code>
    </MissingClosureParamType>
    <RedundantCondition occurrences="2">
      <code>assertIsArray</code>
      <code>assertIsArray</code>
    </RedundantCondition>
  </file>
  <file src="test/Proxy/LazyServiceFactoryTest.php">
    <InvalidArgument occurrences="2">
      <code>[$callback, 'callback']</code>
      <code>[$callback, 'callback']</code>
    </InvalidArgument>
    <MissingClosureParamType occurrences="2">
      <code>$className</code>
      <code>$initializer</code>
    </MissingClosureParamType>
    <MixedFunctionCall occurrences="1">
      <code>$initializer($wrappedInstance, $proxy)</code>
    </MixedFunctionCall>
    <UnusedVariable occurrences="1">
      <code>$wrappedInstance</code>
    </UnusedVariable>
  </file>
  <file src="test/ServiceManagerTest.php">
    <MissingClosureParamType occurrences="3">
      <code>$context</code>
      <code>$context</code>
      <code>$name</code>
    </MissingClosureParamType>
    <MixedAssignment occurrences="9">
      <code>$inc</code>
      <code>$inc</code>
      <code>$instance1</code>
      <code>$instance1</code>
      <code>$instance2</code>
      <code>$instance2</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$serviceFromAlias</code>
      <code>$serviceFromServiceNameAfterUsingAlias</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="1">
      <code>$inc</code>
    </MixedOperand>
    <UnusedClosureParam occurrences="6">
      <code>$container</code>
      <code>$container</code>
      <code>$context</code>
      <code>$context</code>
      <code>$name</code>
      <code>$name</code>
    </UnusedClosureParam>
  </file>
  <file src="test/Tool/ConfigDumperTest.php">
    <MixedAssignment occurrences="1">
      <code>$test</code>
    </MixedAssignment>
    <UnresolvableInclude occurrences="1">
      <code>include $file</code>
    </UnresolvableInclude>
  </file>
</files>
